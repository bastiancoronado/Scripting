using System;

class MainClass {
  public static void Main (string[] args) {
  //arreglos, cilco for, condicionales
    int[] A={0,15,12,6,3,12,18,6,0,12,18,9,6};
    int[] B={6,0,12,18,0,18,16,6,14,8,4,6,10,2,12,2};
    int[] U={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30};//contiene a A y B
    int[] union=new int[A.Length+B.Length];
    int inter=0,contador=0;

    for(int i=0;i<A.Length;i++)//orden A
    {
      for(int j=0;j<A.Length-1;j++)
      {
        if(A[j]>A[j+1])
        {
        int cam=A[j];
        A[j]=A[j+1];
        A[j+1]=cam;
        }
      }
    }
    for(int i=0;i<B.Length;i++)//orden B
    {
      for(int j=0;j<B.Length-1;j++)
      {
        if(B[j]>B[j+1])
        {
        int cam=B[j];
        B[j]=B[j+1];
        B[j+1]=cam;
        }
      }
    }
    Console.WriteLine("Union es=");
    for(int i=0;i<(A.Length+B.Length);i++)//union
    {
      if (i<A.Length)//Hasta que el contdor i supere la long. de A 
      {
        union[i]=A[i];//datos de A entran a union
      }
      else//Despues de que el contador i supere la extencion de A
      {
        union[i]=B[i-A.Length];//datos de B entran a union
      }
    }
    for(int i=0;i<union.Length;i++)//orden union
    {
      for(int j=0;j<union.Length-1;j++)
      {
        if(union[j]>union[j+1])
        {
        int cam=union[j];
        union[j]=union[j+1];
        union[j+1]=cam;
        }
      }
    }
    int unionT=0;
    for(int i=0;i<union.Length;i++)//contador para arreglo sin repeticiones
    {
      bool repetido=false;
      for(int j=i+1;j<union.Length;j++)
      {
        if(union[i]==union[j])
        {
          repetido=true;break;
        }
      }
      if (repetido==false)unionT++;
    }
    int[] unionR =new int[unionT];int contU=0;
    for(int i=0;i<union.Length;i++)//arreglo sin repeticiones
    {
      bool repetido=false;
      for(int j=i+1;j<union.Length;j++)
      {
        if(union[i]==union[j])
        {
          repetido=true;break;
        }
      }
      if (repetido==false)
      {
        unionR[contU]=union[i];contU++;
      }
    }

    for(int i=0;i<unionR.Length;i++)Console.Write(unionR[i]+" ");

    for(int i=0;i<A.Length;i++)//Extencion interseccion[]
    {
      for(int j=0;j<B.Length;j++)
      {
        if(A[i]==B[j])inter++;//intersecion.Length=inter
      }
    }
    int[] interseccion =new int[inter];Console.WriteLine();int contint=0;//interseccion[]
    Console.WriteLine("La interseccion es= ");
    for(int i=0;i<A.Length;i++)
    {
      for(int j=0;j<B.Length;j++)
      {
        if(A[i]==B[j])// true, interseccion[]=B[] 
        {
         interseccion[contint]=B[j];
         contint++;
        }
      }
   }
   int interseccionT=0;
   for(int i=0;i<interseccion.Length;i++)//contador para arreglo  sin repeticiones
   {
     bool repetidoI =false;
     for (int j=i+1;j<interseccion.Length;j++)
     {
       if(interseccion[i]==interseccion[j])
       {
         repetidoI=true;break;
       }
     }
     if(repetidoI==false)interseccionT++;
   }
  int[] interseccionR=new int[interseccionT];int inteC=0;
  for(int i=0;i<interseccion.Length;i++)//arreglo sin repeticions
   {
     bool repetidoI =false;
     for (int j=i+1;j<interseccion.Length;j++)
     {
       if(interseccion[i]==interseccion[j])
       {
         repetidoI=true;break;
       }
     }
     if(repetidoI==false)
     {
       interseccionR[inteC]=interseccion[i];inteC++;
     }
   }
      for(int i=0;i<interseccionR.Length;i++)Console.Write(interseccionR[i]+" ");
   Console.WriteLine();
   for (int i=0;i<U.Length;i++)//Extencion de complmento
   {
    bool dif=true;
     for(int j=0;j<union.Length;j++)
     {
       if(U[i]!=union[j])
       {
         dif=true;//El valor de U[] != Union[]
       }
       else
       {
         dif=false;break;//Hay algun valor de U[] que se encuentra en Union[]
       }
     }
     if(dif==true)contador++;//complemento=contador
   }

  int[] complemento=new int[contador];
  Console.WriteLine("El complemento es=");

  for (int i=0;i<U.Length;i++)
   {
    bool dif=true;
     for(int j=0;j<union.Length;j++)
     {
       if(U[i]!=union[j])//El valor de U[] != Union[]
       {
         dif=true;
       }
       else
       {
         dif=false;break;//Hay algun valor de U[] que se encuentra en Union[]
       }
     }
     if(dif==true)
     {
       int k=0;
       complemento[k]=U[i];//complemento[]=U[]
       Console.Write(complemento[k]+" ");
       k++;
       
     }
   } 
   
   Console.WriteLine();Console.WriteLine("FIN");
  }
}
